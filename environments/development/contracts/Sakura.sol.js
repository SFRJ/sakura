// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"status","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"companies","outputs":[{"name":"_name","type":"string"},{"name":"_email","type":"string"},{"name":"_purpose","type":"string"},{"name":"_totalAmountOfShares","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"companyAddress","type":"address"}],"name":"getCompany","outputs":[{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"companyAddress","type":"address"},{"name":"name","type":"string"},{"name":"email","type":"string"},{"name":"purpose","type":"string"},{"name":"totalAmountOfShares","type":"uint256"},{"name":"shareHolders","type":"address[]"}],"name":"newCompany","outputs":[{"name":"","type":"string"}],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600160a060020a031916331790556109b8806100246000396000f3606060405260e060020a6000350463200d2ed2811461003c578063355e6ce8146100ec57806362bc56e614610113578063fcc0c909146101bd575b005b604080516020818101835260009091528151808301909252600a82527f53414b5552412121212100000000000000000000000000000000000000000000908201525b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60016020819052600435600090815260409020600381015461038e92820190600283019084565b610517600435604080516020818101835260008083528351808301855281815284518084018652828152600160a060020a038716835260018085528684206003810154815489516002828616156101000260001901909216829004601f81018a90048a0282018a01909b528a8152989995989497929593860194908601939192909186918301828280156108845780601f1061085957610100808354040283529160200191610884565b60408051602060046024803582810135601f810185900485028601850190965285855261007e9583359593946044949392909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805160a435808a013560208181028481018201909552818452989a9935999860c4985092965060249190910194509250829190850190849080828437509496505050505050506020604051908101604052806000815260200150608060405190810160405280878152602001868152602001858152602001848152602001506001600050600089600160a060020a031681526020019081526020016000206000506000820151816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061064a57805160ff19168380011785555b5061067a9291505b808211156106d9576000815560010161037a565b6040805160608101839052608080825286546002600182161561010002600019019091160490820181905290918291602083019183019060a0840190899080156104195780601f106103ee57610100808354040283529160200191610419565b820191906000526020600020905b8154815290600101906020018083116103fc57829003601f168201915b50508481038352875460026001821615610100026000190190911604808252602091909101908890801561048e5780601f106104635761010080835404028352916020019161048e565b820191906000526020600020905b81548152906001019060200180831161047157829003601f168201915b5050848103825286546002600182161561010002600019019091160480825260209190910190879080156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b505097505050505050505060405180910390f35b604051808060200180602001806020018581526020018481038452888181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b508481038352878181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105de5780820380516001836020036101000a031916815260200191505b508481038252868181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156106375780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b82800160010185558215610372579182015b8281111561037257825182600050559160200191906001019061065c565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106dd57805160ff19168380011785555b5061070d92915061037a565b5090565b828001600101855582156106cd579182015b828111156106cd5782518260005055916020019190600101906106ef565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061076c57805160ff19168380011785555b5061079c92915061037a565b82800160010185558215610760579182015b8281111561076057825182600050559160200191906001019061077e565b50506060919091015160039190910155600160a060020a03871660009081526001602081815260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156108485780601f1061081d57610100808354040283529160200191610848565b820191906000526020600020905b81548152906001019060200180831161082b57829003601f168201915b505050505090509695505050505050565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b5050604080518854602060026001831615610100026000190190921691909104601f81018290048202830182019093528282529599509488945090925084019050828280156109145780601f106108e957610100808354040283529160200191610914565b820191906000526020600020905b8154815290600101906020018083116108f757829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156109a25780601f10610977576101008083540402835291602001916109a2565b820191906000526020600020905b81548152906001019060200180831161098557829003601f168201915b505050505091509350935093509350919350919356",
    unlinked_binary: "606060405260008054600160a060020a031916331790556109b8806100246000396000f3606060405260e060020a6000350463200d2ed2811461003c578063355e6ce8146100ec57806362bc56e614610113578063fcc0c909146101bd575b005b604080516020818101835260009091528151808301909252600a82527f53414b5552412121212100000000000000000000000000000000000000000000908201525b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60016020819052600435600090815260409020600381015461038e92820190600283019084565b610517600435604080516020818101835260008083528351808301855281815284518084018652828152600160a060020a038716835260018085528684206003810154815489516002828616156101000260001901909216829004601f81018a90048a0282018a01909b528a8152989995989497929593860194908601939192909186918301828280156108845780601f1061085957610100808354040283529160200191610884565b60408051602060046024803582810135601f810185900485028601850190965285855261007e9583359593946044949392909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805160a435808a013560208181028481018201909552818452989a9935999860c4985092965060249190910194509250829190850190849080828437509496505050505050506020604051908101604052806000815260200150608060405190810160405280878152602001868152602001858152602001848152602001506001600050600089600160a060020a031681526020019081526020016000206000506000820151816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061064a57805160ff19168380011785555b5061067a9291505b808211156106d9576000815560010161037a565b6040805160608101839052608080825286546002600182161561010002600019019091160490820181905290918291602083019183019060a0840190899080156104195780601f106103ee57610100808354040283529160200191610419565b820191906000526020600020905b8154815290600101906020018083116103fc57829003601f168201915b50508481038352875460026001821615610100026000190190911604808252602091909101908890801561048e5780601f106104635761010080835404028352916020019161048e565b820191906000526020600020905b81548152906001019060200180831161047157829003601f168201915b5050848103825286546002600182161561010002600019019091160480825260209190910190879080156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b505097505050505050505060405180910390f35b604051808060200180602001806020018581526020018481038452888181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b508481038352878181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105de5780820380516001836020036101000a031916815260200191505b508481038252868181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156106375780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b82800160010185558215610372579182015b8281111561037257825182600050559160200191906001019061065c565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106dd57805160ff19168380011785555b5061070d92915061037a565b5090565b828001600101855582156106cd579182015b828111156106cd5782518260005055916020019190600101906106ef565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061076c57805160ff19168380011785555b5061079c92915061037a565b82800160010185558215610760579182015b8281111561076057825182600050559160200191906001019061077e565b50506060919091015160039190910155600160a060020a03871660009081526001602081815260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156108485780601f1061081d57610100808354040283529160200191610848565b820191906000526020600020905b81548152906001019060200180831161082b57829003601f168201915b505050505090509695505050505050565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b5050604080518854602060026001831615610100026000190190921691909104601f81018290048202830182019093528282529599509488945090925084019050828280156109145780601f106108e957610100808354040283529160200191610914565b820191906000526020600020905b8154815290600101906020018083116108f757829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156109a25780601f10610977576101008083540402835291602001916109a2565b820191906000526020600020905b81548152906001019060200180831161098557829003601f168201915b505050505091509350935093509350919350919356",
    address: "0x608c2d4fa71267c07c08915d65bac373d7d31748",
    generated_with: "2.0.6",
    contract_name: "Sakura"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Sakura = Contract;
  }

})();
