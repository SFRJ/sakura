// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"status","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"companies","outputs":[{"name":"_name","type":"string"},{"name":"_email","type":"string"},{"name":"_purpose","type":"string"},{"name":"_totalAmountOfShares","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"getAllCompanies","outputs":[{"name":"","type":"address[]"}],"type":"function"},{"constant":false,"inputs":[{"name":"companyAddress","type":"address"}],"name":"getCompany","outputs":[{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"shareHolder","type":"address"},{"name":"amount","type":"uint256"}],"name":"distributeShares","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getCompanyCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"companyAddress","type":"address"},{"name":"name","type":"string"},{"name":"email","type":"string"},{"name":"purpose","type":"string"},{"name":"totalAmountOfShares","type":"uint256"},{"name":"shareHolders","type":"address[]"}],"name":"newCompany","outputs":[{"name":"","type":"string"}],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600160a060020a03191633179055610b1c806100246000396000f3606060405236156100615760e060020a6000350463200d2ed28114610063578063355e6ce8146100ab578063408bf4c3146100d257806362bc56e614610142578063debcf0e5146101ec578063f0782640146101f1578063fcc0c909146101fc575b005b6103cd604080516020818101835260009091528151808301909252600a82527f53414b5552412121212100000000000000000000000000000000000000000000908201525b90565b60016020819052600435600090815260409020600381015461043b92820190600283019084565b6105c460408051602081810183526000825282516002805480840283018401909552848252929390929183018282801561013657602002820191906000526020600020905b8154600160a060020a0316815260019190910190602001808311610117575b505050505090506100a8565b61060e600435604080516020818101835260008083528351808301855281815284518084018652828152600160a060020a038716835260018085528684206003810154815489516002828616156101000260001901909216829004601f81018a90048a0282018a01909b528a8152989995989497929593860194908601939192909186918301828280156109e85780601f106109bd576101008083540402835291602001916109e8565b610061565b6107416002546100a8565b60408051602060046024803582810135601f81018590048502860185019096528585526103cd9583359593946044949392909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805160a435808a013560208181028481018201909552818452989a9935999860c4985092965060249190910194509250829190850190849080828437509496505050505050506020604051908101604052806000815260200150608060405190810160405280878152602001868152602001858152602001848152602001506001600050600089600160a060020a031681526020019081526020016000206000506000820151816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061075357805160ff19168380011785555b506107839291505b808211156107e257600081556001016103b9565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561042d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6040805160608101839052608080825286546002600182161561010002600019019091160490820181905290918291602083019183019060a0840190899080156104c65780601f1061049b576101008083540402835291602001916104c6565b820191906000526020600020905b8154815290600101906020018083116104a957829003601f168201915b50508481038352875460026001821615610100026000190190911604808252602091909101908890801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b5050848103825286546002600182161561010002600019019091160480825260209190910190879080156105b05780601f10610585576101008083540402835291602001916105b0565b820191906000526020600020905b81548152906001019060200180831161059357829003601f168201915b505097505050505050505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600f02600301f1509050019250505060405180910390f35b604051808060200180602001806020018581526020018481038452888181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561067c5780820380516001836020036101000a031916815260200191505b508481038352878181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156106d55780820380516001836020036101000a031916815260200191505b508481038252868181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561072e5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b60408051918252519081900360200190f35b828001600101855582156103b1579182015b828111156103b1578251826000505591602001919060010190610765565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107e657805160ff19168380011785555b506108169291506103b9565b5090565b828001600101855582156107d6579182015b828111156107d65782518260005055916020019190600101906107f8565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061087557805160ff19168380011785555b506108a59291506103b9565b82800160010185558215610869579182015b82811115610869578251826000505591602001919060010190610887565b50506060919091015160039190910155600280546001810180835582818380158290116108e5578183600052602060002091820191016108e591906103b9565b505050600092835250602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19168a179055600160a060020a0389168252600180825260409283902080548451600293821615610100026000190190911692909204601f8101849004840283018401909452838252909290918301828280156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b505050505090509695505050505050565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b5050604080518854602060026001831615610100026000190190921691909104601f8101829004820283018201909352828252959950948894509092508401905082828015610a785780601f10610a4d57610100808354040283529160200191610a78565b820191906000526020600020905b815481529060010190602001808311610a5b57829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295985087945092508401905082828015610b065780601f10610adb57610100808354040283529160200191610b06565b820191906000526020600020905b815481529060010190602001808311610ae957829003601f168201915b505050505091509350935093509350919350919356",
    unlinked_binary: "606060405260008054600160a060020a03191633179055610b1c806100246000396000f3606060405236156100615760e060020a6000350463200d2ed28114610063578063355e6ce8146100ab578063408bf4c3146100d257806362bc56e614610142578063debcf0e5146101ec578063f0782640146101f1578063fcc0c909146101fc575b005b6103cd604080516020818101835260009091528151808301909252600a82527f53414b5552412121212100000000000000000000000000000000000000000000908201525b90565b60016020819052600435600090815260409020600381015461043b92820190600283019084565b6105c460408051602081810183526000825282516002805480840283018401909552848252929390929183018282801561013657602002820191906000526020600020905b8154600160a060020a0316815260019190910190602001808311610117575b505050505090506100a8565b61060e600435604080516020818101835260008083528351808301855281815284518084018652828152600160a060020a038716835260018085528684206003810154815489516002828616156101000260001901909216829004601f81018a90048a0282018a01909b528a8152989995989497929593860194908601939192909186918301828280156109e85780601f106109bd576101008083540402835291602001916109e8565b610061565b6107416002546100a8565b60408051602060046024803582810135601f81018590048502860185019096528585526103cd9583359593946044949392909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805160a435808a013560208181028481018201909552818452989a9935999860c4985092965060249190910194509250829190850190849080828437509496505050505050506020604051908101604052806000815260200150608060405190810160405280878152602001868152602001858152602001848152602001506001600050600089600160a060020a031681526020019081526020016000206000506000820151816000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061075357805160ff19168380011785555b506107839291505b808211156107e257600081556001016103b9565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561042d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6040805160608101839052608080825286546002600182161561010002600019019091160490820181905290918291602083019183019060a0840190899080156104c65780601f1061049b576101008083540402835291602001916104c6565b820191906000526020600020905b8154815290600101906020018083116104a957829003601f168201915b50508481038352875460026001821615610100026000190190911604808252602091909101908890801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b5050848103825286546002600182161561010002600019019091160480825260209190910190879080156105b05780601f10610585576101008083540402835291602001916105b0565b820191906000526020600020905b81548152906001019060200180831161059357829003601f168201915b505097505050505050505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600f02600301f1509050019250505060405180910390f35b604051808060200180602001806020018581526020018481038452888181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561067c5780820380516001836020036101000a031916815260200191505b508481038352878181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156106d55780820380516001836020036101000a031916815260200191505b508481038252868181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561072e5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b60408051918252519081900360200190f35b828001600101855582156103b1579182015b828111156103b1578251826000505591602001919060010190610765565b50506020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107e657805160ff19168380011785555b506108169291506103b9565b5090565b828001600101855582156107d6579182015b828111156107d65782518260005055916020019190600101906107f8565b50506040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061087557805160ff19168380011785555b506108a59291506103b9565b82800160010185558215610869579182015b82811115610869578251826000505591602001919060010190610887565b50506060919091015160039190910155600280546001810180835582818380158290116108e5578183600052602060002091820191016108e591906103b9565b505050600092835250602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19168a179055600160a060020a0389168252600180825260409283902080548451600293821615610100026000190190911692909204601f8101849004840283018401909452838252909290918301828280156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b505050505090509695505050505050565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b5050604080518854602060026001831615610100026000190190921691909104601f8101829004820283018201909352828252959950948894509092508401905082828015610a785780601f10610a4d57610100808354040283529160200191610a78565b820191906000526020600020905b815481529060010190602001808311610a5b57829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295985087945092508401905082828015610b065780601f10610adb57610100808354040283529160200191610b06565b820191906000526020600020905b815481529060010190602001808311610ae957829003601f168201915b505050505091509350935093509350919350919356",
    address: "0x5c6f22f69d516ebae1909afb88a3f735108ef7c5",
    generated_with: "2.0.6",
    contract_name: "Sakura"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Sakura = Contract;
  }

})();
