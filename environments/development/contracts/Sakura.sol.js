// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"status","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"companies","outputs":[{"name":"_name","type":"string"},{"name":"_email","type":"string"},{"name":"_purpose","type":"string"},{"name":"_totalAmountOfShares","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"companyAddress","type":"address"},{"name":"name","type":"string"},{"name":"email","type":"string"},{"name":"purpose","type":"string"},{"name":"shareHolders","type":"address[]"},{"name":"totalAmountOfShares","type":"uint256"}],"name":"newCompany","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"companyAddress","type":"address"},{"name":"shareHolderAddress","type":"address"}],"name":"addShareHolder","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "606060405260008054600160a060020a031916331790556103b2806100246000396000f3606060405260e060020a6000350463200d2ed2811461003c578063355e6ce8146100c45780639544f516146100eb578063c9ea5ee414610223575b005b600060605260c0604052600a60809081527f53414b555241212121210000000000000000000000000000000000000000000060a052602060c0908152600a60e081905281906101009060a09080838184600060046012f15050815175ffffffffffffffffffffffffffffffffffffffffffff1916909152505060405161012081900392509050f35b60016020819052600480356000908152604090209081015461022892820190600283019084565b602060248035600481810135601f81018590049094026080908101604052606085815261003a9583359593946044949293920191819083828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805196358089013560208181028a81018201909452818a5297999860a4989097506024929092019550935083925085019084908082843750949650509335935050505073ffffffffffffffffffffffffffffffffffffffff8616600090815260026020526040902054869060ff16156103a957610002565b61003a565b60c0819052608060608181528554600261010060018316158102600019019092160460e081905291928392909160a091899080156102a75780601f1061027c576101008083540402835291602001916102a7565b820191906000526020600020905b81548152906001019060200180831161028a57829003601f168201915b5050605f1981018352875460026001821615610100026000190190911604808252602091909101908890801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050605f198101825286546002600182161561010002600019019091160480825260209190910190879080156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b505097505050505050505060405180910390f35b5050505050505056",
    unlinked_binary: "606060405260008054600160a060020a031916331790556103b2806100246000396000f3606060405260e060020a6000350463200d2ed2811461003c578063355e6ce8146100c45780639544f516146100eb578063c9ea5ee414610223575b005b600060605260c0604052600a60809081527f53414b555241212121210000000000000000000000000000000000000000000060a052602060c0908152600a60e081905281906101009060a09080838184600060046012f15050815175ffffffffffffffffffffffffffffffffffffffffffff1916909152505060405161012081900392509050f35b60016020819052600480356000908152604090209081015461022892820190600283019084565b602060248035600481810135601f81018590049094026080908101604052606085815261003a9583359593946044949293920191819083828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805196358089013560208181028a81018201909452818a5297999860a4989097506024929092019550935083925085019084908082843750949650509335935050505073ffffffffffffffffffffffffffffffffffffffff8616600090815260026020526040902054869060ff16156103a957610002565b61003a565b60c0819052608060608181528554600261010060018316158102600019019092160460e081905291928392909160a091899080156102a75780601f1061027c576101008083540402835291602001916102a7565b820191906000526020600020905b81548152906001019060200180831161028a57829003601f168201915b5050605f1981018352875460026001821615610100026000190190911604808252602091909101908890801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050605f198101825286546002600182161561010002600019019091160480825260209190910190879080156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b505097505050505050505060405180910390f35b5050505050505056",
    address: "0xee4790c93878cfcfa1bb2eb063a1010bac566e80",
    generated_with: "2.0.6",
    contract_name: "Sakura"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Sakura error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Sakura = Contract;
  }

})();
